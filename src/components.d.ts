/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';

import '@adwd/custom-elements-examples';




declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface AppRoot {

    }

    interface StencilCounter {
      'name': number;
    }
  }


    interface HTMLAppRootElement extends StencilComponents.AppRoot, HTMLStencilElement {}

    var HTMLAppRootElement: {
      prototype: HTMLAppRootElement;
      new (): HTMLAppRootElement;
    };
    

    interface HTMLStencilCounterElement extends StencilComponents.StencilCounter, HTMLStencilElement {}

    var HTMLStencilCounterElement: {
      prototype: HTMLStencilCounterElement;
      new (): HTMLStencilCounterElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'app-root': JSXElements.AppRootAttributes;
    'stencil-counter': JSXElements.StencilCounterAttributes;
    }
  }

  namespace JSXElements {

    export interface AppRootAttributes extends HTMLAttributes {

    }

    export interface StencilCounterAttributes extends HTMLAttributes {
      'name'?: number;
      'onChange'?: (event: CustomEvent<number>) => void;
    }
  }

  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement
    'stencil-counter': HTMLStencilCounterElement
  }

  interface ElementTagNameMap {
    'app-root': HTMLAppRootElement;
    'stencil-counter': HTMLStencilCounterElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

