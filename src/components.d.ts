/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@adwd/custom-elements-examples';


declare global {

  namespace StencilComponents {
    interface AppRoot {

    }
  }

  interface HTMLAppRootElement extends StencilComponents.AppRoot, HTMLStencilElement {}

  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };
  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  interface ElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-root': JSXElements.AppRootAttributes;
    }
  }
  namespace JSXElements {
    export interface AppRootAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface StencilCounter {
      'name': number;
    }
  }

  interface HTMLStencilCounterElement extends StencilComponents.StencilCounter, HTMLStencilElement {}

  var HTMLStencilCounterElement: {
    prototype: HTMLStencilCounterElement;
    new (): HTMLStencilCounterElement;
  };
  interface HTMLElementTagNameMap {
    'stencil-counter': HTMLStencilCounterElement;
  }
  interface ElementTagNameMap {
    'stencil-counter': HTMLStencilCounterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'stencil-counter': JSXElements.StencilCounterAttributes;
    }
  }
  namespace JSXElements {
    export interface StencilCounterAttributes extends HTMLAttributes {
      'name'?: number;
      'onChange'?: (event: CustomEvent<number>) => void;
      'onDecrease'?: (event: CustomEvent<number>) => void;
      'onIncrease'?: (event: CustomEvent<number>) => void;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
